https://discuss.codechef.com/t/how-to-find-subset-of-an-array/16275/2
a = [1,2,3]
subsets = [],[1],[2],[3],[1,2],[2,3],[1,3],[1,2,3]
=> 000, 001, 010, 011, 100, 101, 110, 111
=> 2^n - 1

fmt.Printf("%b", n)

https://medium.com/@g789872001darren/gogoalgorithm-1-depth-first-search-582eeb58f23a
n = 3
a = {2, 5, 8}
k = 7
               i = 0
             sum = 0
        |                |
       i=1             i = 1
     sum=0           sum = 2
    |     |         |       | include a[1]
   i=2   i=2       i=2     i=2
 sum=0 sum=5     sum=2   sum=7
                        |      | include a[2]
                       i=3    i=3
                     sum=7  sum=15


func dfs(x int, sum int) bool {
	if x == n {
		return sum == k
	} else if dfs(x+1, sum) {
		return true
	} else if dfs(x+1, sum+a[x]) {
		return true
	} else {
		return false
	}
}

func main() {
	if dfs(0,0) {
		fmt.Println("YES")
	}
}
